# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Form\Handler\ReservationFormHandler:
        class: App\Form\Handler\ReservationFormHandler
        arguments:
            $dataManager: '@App\Manager\Doctrine\ReservationDataManager'

    App\Controller\ReservationController:
        arguments:
            $normalizer: '@App\Normalizer\ReservationNormalizer'

    App\Controller\ReservationFormController:
        arguments:
            $handler: '@App\Form\Handler\ReservationFormHandler'

    App\Repository\RoomRepository:
        class: 'App\Repository\RoomRepository'
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - 'App\Entity\Room'

    App\Normalizer\ReservationNormalizer:
        arguments:
            $roomDataManager: '@App\Manager\Doctrine\RoomDataManager'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Always keep ErrorsResponseListener at a higher priority than ObjectResponseListener
    App\Event\Listener\ErrorsResponseListener:
        tags:
            - { name: kernel.event_listener, event: kernel.view, method: onKernelView, priority: 255 }

    App\Event\Listener\ObjectResponseListener:
        tags:
            - { name: kernel.event_listener, event: kernel.view, method: onKernelView, priority: 200 }
